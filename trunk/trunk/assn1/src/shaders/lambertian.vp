#version 110

/* Uniform Inputs */
uniform vec4 lightPosition;

/* Outputs -> fragment program */
varying vec3 lightVector, normal;

void main() {
	/* The following statement is almost equivalent to writing
		"gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;".
	   Reasons for preferring ftransform() over the above are 
	   that this may a) be faster and b) is guaranteed to return 
	   values that are numerically identical to the fixed-function
	   pipeline results.
	*/
	gl_Position = ftransform();
	
	/* Normal in object coordinates (no gl_NormalMatrix mult.) */
	normal = gl_Normal;

	/* Vertex->Light in object coordinates */
	lightVector = (gl_ModelViewMatrixInverse * lightPosition - gl_Vertex).xyz;
}
